name: Test

on:
  push:
    paths: [ 'src/**', 'spec/**' ]
  pull_request:
    paths: [ 'src/**', 'spec/**' ]
  workflow_dispatch:

env:
  TEST_BADGE_GIST_ID: d11c7cec7a928d0f605db3682ad2678c
  TEST_BADGE_GIST_FILE: test-badge.json

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Install kcov & shellspec
        run: |
          sudo apt-get update
          sudo apt-get install kcov busybox
          curl -fsSL https://git.io/shellspec | sh -s 0.28.1 --yes
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
      - name: Run tests with coverage
        continue-on-error: true
        run: shellspec -s "bash" --kcov
      - name: Run tests on busybox
        continue-on-error: true
        run: shellspec -s "busybox ash" -o junit
      - name: Publish Coverage
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/cobertura.xml
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        with:
          files: report/results_junit.xml
      - name: Generate Test Badge Data
        id: test-badge
        run: |
          tests=${{fromJSON(steps.test-results.outputs.json).stats.tests}}
          succ=${{fromJSON(steps.test-results.outputs.json).stats.tests_succ}}
          fail=$((${{fromJSON(steps.test-results.outputs.json).stats.tests_fail}} + ${{fromJSON(steps.test-results.outputs.json).stats.tests_error}}))
          skip=${{fromJSON(steps.test-results.outputs.json).stats.tests_skip}}
          
          message="$([[ $succ -eq 0 ]] || echo "✔ $succ | ")$([[ $fail -eq 0 ]] || echo "✘ $fail | ")$([[ $skip -eq 0 ]] || echo "➟ $skip | ")"
          echo "message=$([[ $tests -eq 0 ]] && echo "no tests" || echo "${message::-3}")" >> $GITHUB_OUTPUT
          
          color="$(([[ $fail -gt 0 ]] && echo "red") || ([[ $succ -eq 0 ]] && echo "yellow") || ([[ $skip -gt 0 ]] && echo "green") || echo "brightgreen")"
          echo "color=$color" >> $GITHUB_OUTPUT
      - name: Update Test Badge Gist
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ env.TEST_BADGE_GIST_ID }}
          filename: ${{ env.TEST_BADGE_GIST_FILE }}
          label: tests
          message: ${{ steps.test-badge.outputs.message }}
          color: ${{ steps.test-badge.outputs.color }}
