name: Build & Publish Docker Image

on:
  push:
    branches: [ 'main' ]
    tags: [ 'v*.*.*' ]
    paths: [ 'src/**' ]
  pull_request:
    paths: [ 'src/**' ]
  workflow_dispatch:

env:
  GITHUB_IMAGE: ghcr.io/genericmale/protonvpn-docker
  DOCKERHUB_IMAGE: genericmale/protonvpn

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        if: github.ref_type == 'tag'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            ${{ env.GITHUB_IMAGE }}
            name=${{ env.DOCKERHUB_IMAGE }},enable=${{github.ref_type == 'tag'}}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v6.5.0
        with:
          context: ./src
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: mode=max
          sbom: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@d9cd5b1c23aaf8cb31bb09141028215828364bbb # v0.24.0
        with:
          image-ref: ${{ env.GITHUB_IMAGE }}@${{ steps.build.outputs.digest }}
          scanners: 'vuln,secret,config'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@eb055d739abdc2e8de2e5f4ba1a8b246daa779aa # v3.26.0
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Delete old images
        if: github.event_name != 'pull_request'
        uses: snok/container-retention-policy@4f22ef80902ad409ed55a99dc5133cc1250a0d03 # v3.0.0
        with:
          account: user
          token: ${{ secrets.GITHUB_TOKEN }}
          cut-off: 0s
          image-names: ${{ github.event.repository.name }}
          tag-selection: untagged
