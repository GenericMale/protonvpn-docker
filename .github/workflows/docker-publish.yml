name: build

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Generate lowercase image name
        run: echo "IMAGE_NAME=${REGISTRY@L}/${GITHUB_REPOSITORY@L}" >>${GITHUB_ENV}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          scanners: 'vuln,secret,config'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # Prevent Manifest corruption when deleting old images, see:
      # https://github.com/snok/container-retention-policy?tab=readme-ov-file#safely-handling-multi-platform-multi-arch-packages
      - name: Fetch multi-platform package version SHAs
        id: multi-arch-digests
        run: |
          package=$(docker manifest inspect $IMAGE_NAME | jq -r '.manifests[].digest' | paste -s -d ' ' -)
          echo "multi-arch-digests=$package" >> $GITHUB_OUTPUT

      - name: Delete old images
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: user
          token: ${{ secrets.GITHUB_TOKEN }}
          cut-off: 0s
          image-names: ${{ github.event.repository.name }}
          tag-selection: untagged
          skip-shas: ${{ steps.multi-arch-digests.outputs.multi-arch-digests }}
